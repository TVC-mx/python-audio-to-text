# ===========================================
# DOCKERFILE OPTIMIZADO PARA GPU
# ===========================================
# Dockerfile específico para Azure VM con GPU
# Optimizado para NVIDIA CUDA y Whisper

FROM nvidia/cuda:11.8-devel-ubuntu22.04

# ===========================================
# VARIABLES DE ENTORNO
# ===========================================
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# ===========================================
# INSTALAR DEPENDENCIAS DEL SISTEMA
# ===========================================
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    ffmpeg \
    libsndfile1 \
    libsndfile1-dev \
    libsoxr0 \
    libsoxr-dev \
    gcc \
    g++ \
    git \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# ===========================================
# CONFIGURAR PYTHON
# ===========================================
RUN ln -s /usr/bin/python3 /usr/bin/python
RUN python -m pip install --upgrade pip

# ===========================================
# INSTALAR DEPENDENCIAS DE CUDA
# ===========================================
RUN pip install --no-cache-dir \
    torch==2.0.1+cu118 \
    torchaudio==2.0.2+cu118 \
    --extra-index-url https://download.pytorch.org/whl/cu118

# ===========================================
# INSTALAR DEPENDENCIAS DE WHISPER
# ===========================================
RUN pip install --no-cache-dir \
    numpy==1.24.3 \
    openai-whisper \
    pydub \
    mysql-connector-python \
    python-dotenv \
    requests \
    tqdm

# ===========================================
# CONFIGURAR DIRECTORIO DE TRABAJO
# ===========================================
WORKDIR /app

# ===========================================
# COPIAR ARCHIVOS DE LA APLICACIÓN
# ===========================================
COPY . .

# ===========================================
# CREAR DIRECTORIOS NECESARIOS
# ===========================================
RUN mkdir -p audios textos logs

# ===========================================
# CONFIGURAR PERMISOS
# ===========================================
RUN chmod +x run.sh

# ===========================================
# EXPONER PUERTO (OPCIONAL)
# ===========================================
EXPOSE 8000

# ===========================================
# COMANDO POR DEFECTO
# ===========================================
CMD ["python", "main.py"]
